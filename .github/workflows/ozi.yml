
# Part of dyno.
# See LICENSE.txt in the project root for details.
name: OZI

on:
  push:
    branches:
      - "v?[0-9].[0-9]*"
      - "v?[1-9]+[0-9].[0-9]*"

permissions:
  contents: read

jobs:


  checkpoint-cp311-ubuntu-latest:
    name: checkpoint (Python 3.11 on ubuntu-latest)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    permissions:
        id-token: write
    steps:
      - uses: OZI-Project/checkpoint@301753e6853d6a65055c8df69dafe7df74bd7963
        with:
          python-version: "3.11"
  checkpoint-cp312-ubuntu-latest:
    name: checkpoint (Python 3.12 on ubuntu-latest)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    permissions:
        id-token: write
    steps:
      - uses: OZI-Project/checkpoint@301753e6853d6a65055c8df69dafe7df74bd7963
        with:
          python-version: "3.12"
  checkpoint-cp313-ubuntu-latest:
    name: checkpoint (Python 3.13 on ubuntu-latest)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    permissions:
        id-token: write
    steps:
      - uses: OZI-Project/checkpoint@301753e6853d6a65055c8df69dafe7df74bd7963
        with:
          python-version: "3.13"

  checkpoint:
    runs-on: ubuntu-latest
    needs: [checkpoint-cp311-ubuntu-latest,checkpoint-cp312-ubuntu-latest,checkpoint-cp313-ubuntu-latest,]
    steps:
      - run: echo "checkpoint success"


  draft:
    needs: checkpoint
    runs-on: ubuntu-latest
    concurrency: draft
    strategy:
      fail-fast: true
    permissions:
      contents: write
      id-token: write
    outputs:
      drafted: ${{ steps.draft.outputs.drafted }}
      tag: ${{ steps.draft.outputs.tag }}
    steps:
      - uses: OZI-Project/draft@d870c506fefd49de075e21217885c8670cd9b883
        id: draft


  release:
    needs: [draft, checkpoint]
    runs-on: ubuntu-latest
    concurrency: release
    strategy:
      matrix:
        py:
          - security2
          - security1
          - bugfix
          - prerelease
      fail-fast: true
      max-parallel: 1
    outputs:
      hashes: ${{ steps.release.outputs.hashes }}
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: OZI-Project/release@067a3867b9df3c1c2b86db5e062ca83c48dbc0bc
        id: release
        with:
          python-dist: ${{ matrix.py }}
          tag: ${{ needs.draft.outputs.tag }}

  generate-provenance:
    needs: [draft, release]
    name: Generate build provenance
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    # Currently this action needs to be referred by tag. More details at:
    # https://github.com/slsa-framework/slsa-github-generator#verification-of-provenance
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      provenance-name: provenance-${{ github.event.repository.name }}-${{ needs.draft.outputs.tag }}.intoto.jsonl
      base64-subjects: "${{ needs.release.outputs.hashes }}"
      upload-tag-name: "${{ needs.draft.outputs.tag }}"
      upload-assets: true


  publish:
    runs-on: ubuntu-latest
    needs: [draft, release, generate-provenance]
    if: needs.draft.outputs.drafted == 'true'
    permissions:
      contents: write
      id-token: write
    steps:
    - uses: OZI-Project/publish@d2deb87a158a3555d67cb9dbabde2fe3e271fa6a
      with:
        create-pull-request: true
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc
      with:
        repository-url: "https://test.pypi.org/legacy/"